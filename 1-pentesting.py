#!/usr/bin/python3
import socket
"""Let's go through each method used from the `socket` library in the provided code:

1. **socket.socket()**: This method creates a new socket. It takes two arguments: the first one specifies the address family, and the second one specifies the socket type. In the code, `socket.AF_INET` indicates the IPv4 address family, and `socket.SOCK_STREAM` indicates the TCP socket type.

2. **settimeout()**: This method sets a timeout period in seconds for blocking socket operations. In the code, `ClientSocket.settimeout(1)` sets the timeout period to 1 second. If a connection attempt takes longer than this timeout, a `socket.timeout` exception will be raised.

3. **connect()**: This method is used to initiate a connection to a remote address. It takes a tuple `(host, port)` as an argument. In the code, `ClientSocket.connect((target_host, port))` tries to connect to the target host (`target_host`) on the specified port (`port`).

4. **close()**: This method closes the socket. After using the socket, it's important to close it to release the resources associated with it. In the code, `ClientSocket.close()` is called after attempting to connect to each port.

These methods together are used to create a TCP port scanner, which attempts to connect to each specified port on a given target host and reports whether the port is open or closed.
"""

def port_scan(target_host, target_ports):
    # Create socket obj
    ClientSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    ClientSocket.settimeout(1)
    
    for port in target_ports:
        try:
            ClientSocket.connect((target_host, port))
            print(f"Port {port} is opened on host {target_host}")
            ClientSocket.close()
        except Exception as e:
            print(f"Port {port} is closed on host {target_host}")

def main():
    target_host = "127.0.0.1"  # Replace with the target host
    target_ports = [3389, 23, 53, 443, 80, 22, 21]
    
    print(f"Scanning Target host -> {target_host}...")
    # Calling our function
    port_scan(target_host, target_ports)

if __name__ == "__main__":
    main()

